name: build
on:
  push:
    branches:
      - main
    tags:
      - v*
    paths-ignore:
      - 'k8s/**'
  pull_request:
    paths-ignore:
      - 'k8s/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  container-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Context for Buildx
        id: buildx-context
        run: |
          docker context create builders

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver: docker-container
          driver-opts: network=host
          version: latest
          endpoint: builders
          buildkitd-flags: --debug --allow-insecure-entitlement network.host

      - name: Login to docker.pennywise.cc
        uses: docker/login-action@v2
        with:
          registry: docker.pennywise.cc
          username: ${{ secrets.ARTIFACTORY_USERNAME }}
          password: ${{ secrets.ARTIFACTORY_PASSWORD }}

      - name: Login to docker-builds.pennywise.cc
        uses: docker/login-action@v2
        with:
          registry: docker-builds.pennywise.cc
          username: ${{ secrets.ARTIFACTORY_USERNAME }}
          password: ${{ secrets.ARTIFACTORY_PASSWORD }}

      - name: dockerfile lint
        uses: rusty-actions/dockerfile-linter@v1
        continue-on-error: true

      - name: generate tags
        id: tags
        run: |
          DOCKER_IMAGE=docker-builds.pennywise.cc/${GITHUB_REPOSITORY,,}
          VERSION=edge
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION=latest
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          allow: network.host
          push: true
          tags: ${{ steps.tags.outputs.TAGS }}
          file: Dockerfile
          context: .
          cache-from: type=gha
          cache-to: type=gha
          build-args: |
            ARTIFACTORY_PASSWORD=${{secrets.ARTIFACTORY_PASSWORD}}
            ARTIFACTORY_USERNAME=${{secrets.ARTIFACTORY_USERNAME}}
